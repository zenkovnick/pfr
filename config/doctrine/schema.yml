RiskBuilder:
  actAs: [Timestampable]
  columns:
    account_id:                    {type: integer }
    form_name:                     {type: string(255)}
    form_instructions:             {type: string(255)}
    mitigation_low_message:        {type: string(255)}
    mitigation_low_instructions:   {type: string(255)}
    mitigation_low_min:            {type: integer, default: 0 }
    mitigation_low_max:            {type: integer, default: 14 }
    mitigation_low_notify:         {type: boolean, default: true}
    mitigation_medium_message:     {type: string(255)}
    mitigation_medium_instructions: {type: string(255)}
    mitigation_medium_min:         {type: integer, default: 15 }
    mitigation_medium_max:         {type: integer, default: 24 }
    mitigation_medium_notify:      {type: boolean, default: true}
    mitigation_medium_require_details:      {type: boolean, default: true}
    mitigation_high_message:       {type: string(255)}
    mitigation_high_instructions:   {type: string(255)}
    mitigation_high_min:           {type: integer, default: 25 }
    mitigation_high_max:           {type: integer, default: 50 }
    mitigation_high_notify:        {type: boolean, default: true}
    mitigation_high_prevent_flight:        {type: boolean, default: true}

  relations:
    RiskFactorFields:
      class: RiskFactorField
      local: id
      foreign: risk_builder_id
      type: many
      onDelete: CASCADE
    FlightInformationFields:
      class: FlightInformationField
      local: id
      foreign: risk_builder_id
      type: many
      onDelete: CASCADE
    Account:
      class: Account
      local: account_id
      foreign: id
      type: one
      onDelete: CASCADE


RiskFactorField:
  actAs: [Timestampable]
  columns:
    risk_builder_id:          {type: integer}
    question:         {type: string(255)}
    help_message:    {type: string(255)}
    position:         {type: integer}
  relations:
    RiskBuilder:
      class: RiskBuilder
      local: risk_builder_id
      foreign: id
      type: one
      onDelete: CASCADE
    ResponseOptions:
      class: ResponseOptionField
      local: id
      foreign: risk_factor_id
      type: many
      onDelete: CASCADE

ResponseOptionField:
  actAs: [Timestampable]
  columns:
    risk_factor_id:   {type: integer}
    response_text:    {type: string(255)}
    response_value:   {type: integer}
    note:             {type: string(255)}
  relations:
    RiskFactorField:
      class: RiskFactorField
      local: risk_factor_id
      foreign: id
      type: one
      onDelete: CASCADE

FlightInformationField:
  actAs: [Timestampable]
  columns:
    risk_builder_id:          {type: integer}
    information_name: {type: string(255)}
    position:         {type: integer}
    hiddable:         {type: boolean }
    is_hide:          {type: boolean, default: false}
  relations:
    RiskBuilder:
      class: RiskBuilder
      local: risk_builder_id
      foreign: id
      type: one
      onDelete: CASCADE

MitigationField:
  actAs: [Timestampable]
  columns:
    risk_builder_id:          {type: integer}
    type:             {type: varchar(20)}
    message:          {type: varchar(255)}
    instructions:     {type: varchar(255)}
    min_value:        {type: integer}
    max_value:        {type: integer}
    chief_notify:     {type: boolean}
  relations:
    RiskBuilder:
      foreignAlias: RiskBuilder
      local: risk_builder_id
      foreign: id
      type: one
      foreignType: many
      onDelete: CASCADE

Account:
  actAs: [Timestampable]
  columns:
    title:             {type: varchar(255), notnull: true }
    photo:             {type: varchar(255)}
    managed_by_id:     {type: integer}
    chief_pilot_id:    {type: integer}
    has_modified_form: {type: boolean, default: false}
    has_plane:         {type: boolean, default: false}
    has_pilot:         {type: boolean, default: false}
    has_skipped_pilot: {type: boolean, default: false}
    has_flight:        {type: boolean, default: false}
  relations:
    Planes:            { class: Plane, refClass: AccountPlane, local: plane_id, foreign: account_id }
    Users:             { class: sfGuardUser, refClass: UserAccount, local: user_id, foreign: account_id }
    ChiefPilot:
      class: sfGuardUser
      local: chief_pilot_id
      foreign: id
      onDelete: CASCADE
    Manager:
      class: sfGuardUser
      local: managed_by_id
      foreign: id
      type: one
      onDelete: CASCADE
    RiskBuilders:
      class: RiskBuilder
      local: id
      foreign: account_id
      type: many
      onDelete: CASCADE
Plane:
  actAs: [Timestampable]
  columns:
    tail_number:       { type: varchar(40) }
  relations:
    Accounts:          { class: Account, refClass: AccountPlane, local: account_id, foreign: plane_id }

AccountPlane:
    columns:
      account_id:      { type: integer, notnull: true, primary: true }
      plane_id:        { type: integer, notnull: true, primary: true }
      position:        { type: integer }
    relations:
      Account:         { class: Account, foreign: id, local: account_id, onDelete: CASCADE, foreignAlias: AccountPlane }
      Plane:           { class: Plane, foreign: id, local: plane_id, onDelete: CASCADE, foreignAlias: AccountPlane }

UserAccount:
    columns:
      account_id:      { type: integer, notnull: true, primary: true }
      user_id:         { type: integer, notnull: true, primary: true }
      is_manager:      { type: boolean, default: false }
      role:            { type: enum(), values: ['pic', 'sic', 'both'], default: 'both'}
      position:        { type: integer }
      invite_token:    { type: string(255) }
      is_active:       { type: boolean, default: false }
    relations:
      Account:         { class: Account, foreign: id, local: account_id, onDelete: CASCADE, foreignAlias: UserAccount }
      User:            { class: sfGuardUser, foreign: id, local: user_id, onDelete: CASCADE, foreignAlias: UserAccount }
    actAs: [Timestampable]

Flight:
    columns:
      account_id:      {type: integer }
      plane_id:        {type: integer }
      pic_id:          {type: integer }
      sic_id:          {type: integer }
      sic_custom:      {type: varchar(255), default: null }
      trip_number:     {type: varchar(255)}
      airport_from_id: {type: integer }
      airport_to_id:   {type: integer }
      #airport_from: {type: varchar(255) }
      #airport_to:   {type: varchar(255) }
      departure_date:  {type: datetime}
      risk_factor_sum: {type: integer }
      risk_factor_type: {type: enum(), values: ['low', 'medium', 'high']}
      mitigation_sum:  {type: integer }
      info:            {type: text }
      drafted:         {type: boolean, default: true}
      status:          {type: enum(), values: ['new', 'assess', 'complete'], default: 'new'}
    relations:
      Account: {class: Account, local: account_id, foreign: id, type: one, onDelete: CASCADE}
      Plane:   {class: Plane, local: plane_id, foreign: id, type: one, onDelete: CASCADE}
      PIC:     {class: sfGuardUser, local: pic_id, foreign: id, type: one, onDelete: CASCADE}
      SIC:     {class: sfGuardUser, local: sic_id, foreign: id, type: one, onDelete: CASCADE}
      AirportFrom: {class: Airport, local: airport_from_id, foreign: id, type: one, onDelete: CASCADE}
      AirportTo:   {class: Airport, local: airport_to_id, foreign: id, type: one, onDelete: CASCADE}
    actAs: [Timestampable]

Airport:
  columns:
    name: {type: string(255) }
    city: {type: string(255) }
    country: {type: string(255) }
    IATAFAA: {type: string(3) }
    ICAO: {type: string(4) }
    latitude: {type: float }
    longitude: {type: float }
    altitude: {type: integer }
    timezone: {type: integer }
    DST: {type: enum(), values: ['E', 'A', 'S', 'O', 'Z', 'N', 'U']}