<?php

/**
 * Flight
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @package    blueprint
 * @subpackage model
 * @author     Your name here
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
class Flight extends BaseFlight
{
    public static function generateFromDB($account_obj){
        //$this->setAccount($account_obj);

        //$risk_builder = $this->getAccount()->getRiskBuilders()->getFirst(); /* Change if there are more than one risk builder in account */
        $risk_builder = $account_obj->getRiskBuilders()->getFirst();

        $result = array();
        $types = array('low', 'medium', 'high');
        foreach($types as $type){
            $result["mitigation_{$type}_message"] = $risk_builder->{"getMitigation".ucfirst($type)."Message"}();
            $result["mitigation_{$type}_instructions"] = $risk_builder->{"getMitigation".ucfirst($type)."Instructions"}();
            $result["mitigation_{$type}_min"] = $risk_builder->{"getMitigation".ucfirst($type)."Min"}();
            $result["mitigation_{$type}_max"] = $risk_builder->{"getMitigation".ucfirst($type)."Max"}();
            $result["mitigation_{$type}_notify"] = $risk_builder->{"getMitigation".ucfirst($type)."Notify"}();

        }
        $result['mitigation_medium_require_details'] = $risk_builder->getMitigationMediumRequireDetails();
        $result['mitigation_high_prevent_flight'] = $risk_builder->getMitigationHighPreventFlight();

        $result['form_name']  = $risk_builder->getFormName();
        $result['form_instructions'] = $risk_builder->getFormInstructions();
        $result['airport_from'] = null;
        $result['airport_to'] = null;
        $result['departure_date'] = null;
        $result['departure_time'] = null;
        foreach($risk_builder->getOrderedFlightInformationFields() as $field){
            if(!$field->getIsHide()){
                $flight_information['name'] = $field->getInformationName();
                $flight_information['value'] = null;
                $result['flight_information'][] = $flight_information;
            }
        }
        $result['risk_analysis'] = array();
        foreach($risk_builder->getOrderedRiskFactors() as $field){
            $risk_factor = array();
            $risk_factor['question'] = $field->getQuestion();
            $risk_factor['help_message'] = $field->getHelpMessage();
            $risk_factor['mitigation'] = null;
            $risk_factor['selected_response'] = null;
            $risk_factor['response_options'] = array();
            $risk_factor['section_title']= $field->getSectionTitle();
            if($field->getSectionTitle() == false){
                foreach($field->getResponseOptions() as $option){
                    $response = array();
                    $response['text'] = $option->getResponseText();
                    $response['value'] = $option->getResponseValue();
                    $response['note'] = $option->getNote();
                    $risk_factor['response_options'][$option->getId()] = $response;
                }
            }

            $result['risk_analysis'][] = $risk_factor;
        }
        /*$this->setInfo(json_encode($result));
        $this->save();*/
        return json_encode($result);
    }

    public function generateFromDBAndForm($account_obj, $risk_form){
        $risk_builder = $account_obj->getRiskBuilders()->getFirst();
        $values = $risk_form->getTaintedValues();
        $result = array();
        $types = array('low', 'medium', 'high');
        foreach($types as $type){
            $result["mitigation_{$type}_message"] = $risk_builder->{"getMitigation".ucfirst($type)."Message"}();
            $result["mitigation_{$type}_instructions"] = $risk_builder->{"getMitigation".ucfirst($type)."Instructions"}();
            $result["mitigation_{$type}_min"] = $risk_builder->{"getMitigation".ucfirst($type)."Min"}();
            $result["mitigation_{$type}_max"] = $risk_builder->{"getMitigation".ucfirst($type)."Max"}();
            $result["mitigation_{$type}_notify"] = $risk_builder->{"getMitigation".ucfirst($type)."Notify"}();

        }
        $result['mitigation_medium_require_details'] = $risk_builder->getMitigationMediumRequireDetails();
        $result['mitigation_high_prevent_flight'] = $risk_builder->getMitigationHighPreventFlight();

        $result['form_name']  = $values['form_name'];
        $result['form_instructions'] = $values['form_instructions'];
        $result['airport_from'] = null;
        $result['airport_to'] = null;
        $result['departure_date'] = null;
        $result['departure_time'] = null;
        foreach($risk_builder->getOrderedFlightInformationFields() as $field){
            if(!$field->getIsHide()){
                $flight_information['name'] = $field->getInformationName();
                $flight_information['value'] = null;
                $result['flight_information'][] = $flight_information;
            }
        }
        $result['risk_analysis'] = array();
        foreach($risk_builder->getOrderedRiskFactors() as $field){
            $risk_factor = array();
            $risk_factor['question'] = $field->getQuestion();
            $risk_factor['help_message'] = $field->getHelpMessage();
            $risk_factor['mitigation'] = null;
            $risk_factor['selected_response'] = null;
            $risk_factor['response_options'] = array();
            $risk_factor['section_title']= $field->getSectionTitle();
            if($field->getSectionTitle() == false){
                foreach($field->getResponseOptions() as $option){
                    $response = array();
                    $response['text'] = $option->getResponseText();
                    $response['value'] = $option->getResponseValue();
                    $response['note'] = $option->getNote();
                    $risk_factor['response_options'][$option->getId()] = $response;
                }
            }
            $result['risk_analysis'][] = $risk_factor;
        }
        /*$this->setInfo(json_encode($result));
        $this->save();*/
        return json_encode($result);
    }

    public static function generateKeyByTitle($title){
        return strtolower(str_replace(' ', '_', trim(str_replace(':', '', preg_replace('/\([a-zA-Z_ ]*\)/i','',$title)))));
    }

    public function getResponseOptionTitles($risk_factor){
        $response_option_titles = array();
        foreach($risk_factor['response_options'] as $id => $response_option){
            $response_option_titles[$id] = $response_option['text'];
        }
        return $response_option_titles;
    }

    public function getMitigationInfo(){
        $flight_data = json_decode($this->getInfo(), true);
        $mitigation_info = array();
        $risk = $this->getRiskFactorSum();
        if($risk <= $flight_data["mitigation_low_max"]){
            $mitigation_info['type'] = 'low';
        } else if($risk >= $flight_data["mitigation_medium_min"] && $risk <= $flight_data["mitigation_medium_max"]) {
            $mitigation_info['type'] = 'medium';
        } else {
            $mitigation_info['type'] = 'high';
        }
        $mitigation_info['message'] = $flight_data["mitigation_{$mitigation_info['type']}_message"];
        $mitigation_info['instructions'] = $flight_data["mitigation_{$mitigation_info['type']}_instructions"];
        $mitigation_info['notify'] = $flight_data["mitigation_{$mitigation_info['type']}_notify"];
        if($mitigation_info['type'] == 'medium'){
            $mitigation_info['require_details'] = $flight_data["mitigation_{$mitigation_info['type']}_require_details"];
        }

        if($mitigation_info['type'] == 'high'){
            $mitigation_info['prevent_flight'] = $flight_data["mitigation_{$mitigation_info['type']}_prevent_flight"];
        }

        return $mitigation_info;
    }

    public static function getAverageRisk($flights){
        $sum = 0;
        foreach($flights as $flight){
            $sum += $flight->getRiskFactorSum();
        }
        return $flights->count() > 0 ? $sum/$flights->count() : 0;
    }

    public static function getAverageMitigation($flights){
        $sum = 0;
        foreach($flights as $flight){
            $sum += $flight->getMitigationSum();
        }
        return $flights->count() > 0 ? $sum/$flights->count() : 0;
    }

    public static function csvToArray($filename='', $delimiter=',', $header = null)
    {
        /*if(!file_exists($filename) || !is_readable($filename))
            return FALSE;*/

        $data = array();
        if (($handle = fopen($filename, 'r')) !== FALSE)
        {
            while (($row = fgetcsv($handle, 1000, $delimiter)) !== FALSE)
            {
                if(!$header)
                    $header = $row;
                else
                    $data[] = array_combine($header, $row);
            }
            fclose($handle);
        }
        return $data;
    }

    public function getRiskSelectedReportData(){
        $flight_data = json_decode($this->getInfo(), true);
        $high_risk_factors = array();
        foreach($flight_data['risk_analysis'] as $key => $risk_factor)
        {
            $arr = array();
            //if(!is_null($risk_factor['selected_response']) && $risk_factor['response_options'][$risk_factor['selected_response']]['value']>0){
                $index = md5($risk_factor['question']);
                $arr['question'] = $risk_factor['question'];
//                $arr['answer'] = $risk_factor['response_options'][$risk_factor['selected_response']]['text'];
//                $arr['risk'] =  $risk_factor['response_options'][$risk_factor['selected_response']]['value'];

                $high_risk_factors[$index]['question'] = $risk_factor['question'];
                $high_risk_factors[$index]['with_risk'] = (!is_null($risk_factor['selected_response']) && $risk_factor['response_options'][$risk_factor['selected_response']]['value']>0) ? true : false;
            //}
        }
        return $high_risk_factors;
    }
}
