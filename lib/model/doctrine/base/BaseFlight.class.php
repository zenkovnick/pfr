<?php

/**
 * BaseFlight
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $account_id
 * @property integer $plane_id
 * @property integer $pic_id
 * @property integer $sic_id
 * @property varchar $sic_custom
 * @property varchar $trip_number
 * @property integer $airport_from_id
 * @property integer $airport_to_id
 * @property datetime $departure_date
 * @property integer $risk_factor_sum
 * @property enum $risk_factor_type
 * @property integer $mitigation_sum
 * @property text $info
 * @property boolean $drafted
 * @property enum $status
 * @property Account $Account
 * @property Plane $Plane
 * @property sfGuardUser $PIC
 * @property sfGuardUser $SIC
 * @property Airport $AirportFrom
 * @property Airport $AirportTo
 * 
 * @method integer     getAccountId()        Returns the current record's "account_id" value
 * @method integer     getPlaneId()          Returns the current record's "plane_id" value
 * @method integer     getPicId()            Returns the current record's "pic_id" value
 * @method integer     getSicId()            Returns the current record's "sic_id" value
 * @method varchar     getSicCustom()        Returns the current record's "sic_custom" value
 * @method varchar     getTripNumber()       Returns the current record's "trip_number" value
 * @method integer     getAirportFromId()    Returns the current record's "airport_from_id" value
 * @method integer     getAirportToId()      Returns the current record's "airport_to_id" value
 * @method datetime    getDepartureDate()    Returns the current record's "departure_date" value
 * @method integer     getRiskFactorSum()    Returns the current record's "risk_factor_sum" value
 * @method enum        getRiskFactorType()   Returns the current record's "risk_factor_type" value
 * @method integer     getMitigationSum()    Returns the current record's "mitigation_sum" value
 * @method text        getInfo()             Returns the current record's "info" value
 * @method boolean     getDrafted()          Returns the current record's "drafted" value
 * @method enum        getStatus()           Returns the current record's "status" value
 * @method Account     getAccount()          Returns the current record's "Account" value
 * @method Plane       getPlane()            Returns the current record's "Plane" value
 * @method sfGuardUser getPIC()              Returns the current record's "PIC" value
 * @method sfGuardUser getSIC()              Returns the current record's "SIC" value
 * @method Airport     getAirportFrom()      Returns the current record's "AirportFrom" value
 * @method Airport     getAirportTo()        Returns the current record's "AirportTo" value
 * @method Flight      setAccountId()        Sets the current record's "account_id" value
 * @method Flight      setPlaneId()          Sets the current record's "plane_id" value
 * @method Flight      setPicId()            Sets the current record's "pic_id" value
 * @method Flight      setSicId()            Sets the current record's "sic_id" value
 * @method Flight      setSicCustom()        Sets the current record's "sic_custom" value
 * @method Flight      setTripNumber()       Sets the current record's "trip_number" value
 * @method Flight      setAirportFromId()    Sets the current record's "airport_from_id" value
 * @method Flight      setAirportToId()      Sets the current record's "airport_to_id" value
 * @method Flight      setDepartureDate()    Sets the current record's "departure_date" value
 * @method Flight      setRiskFactorSum()    Sets the current record's "risk_factor_sum" value
 * @method Flight      setRiskFactorType()   Sets the current record's "risk_factor_type" value
 * @method Flight      setMitigationSum()    Sets the current record's "mitigation_sum" value
 * @method Flight      setInfo()             Sets the current record's "info" value
 * @method Flight      setDrafted()          Sets the current record's "drafted" value
 * @method Flight      setStatus()           Sets the current record's "status" value
 * @method Flight      setAccount()          Sets the current record's "Account" value
 * @method Flight      setPlane()            Sets the current record's "Plane" value
 * @method Flight      setPIC()              Sets the current record's "PIC" value
 * @method Flight      setSIC()              Sets the current record's "SIC" value
 * @method Flight      setAirportFrom()      Sets the current record's "AirportFrom" value
 * @method Flight      setAirportTo()        Sets the current record's "AirportTo" value
 * 
 * @package    blueprint
 * @subpackage model
 * @author     Your name here
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseFlight extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('flight');
        $this->hasColumn('account_id', 'integer', null, array(
             'type' => 'integer',
             ));
        $this->hasColumn('plane_id', 'integer', null, array(
             'type' => 'integer',
             ));
        $this->hasColumn('pic_id', 'integer', null, array(
             'type' => 'integer',
             ));
        $this->hasColumn('sic_id', 'integer', null, array(
             'type' => 'integer',
             ));
        $this->hasColumn('sic_custom', 'varchar', 255, array(
             'type' => 'varchar',
             'length' => 255,
             ));
        $this->hasColumn('trip_number', 'varchar', 255, array(
             'type' => 'varchar',
             'length' => 255,
             ));
        $this->hasColumn('airport_from_id', 'integer', null, array(
             'type' => 'integer',
             ));
        $this->hasColumn('airport_to_id', 'integer', null, array(
             'type' => 'integer',
             ));
        $this->hasColumn('departure_date', 'datetime', null, array(
             'type' => 'datetime',
             ));
        $this->hasColumn('risk_factor_sum', 'integer', null, array(
             'type' => 'integer',
             ));
        $this->hasColumn('risk_factor_type', 'enum', null, array(
             'type' => 'enum',
             'values' => 
             array(
              0 => 'low',
              1 => 'medium',
              2 => 'high',
             ),
             'length' => '',
             ));
        $this->hasColumn('mitigation_sum', 'integer', null, array(
             'type' => 'integer',
             ));
        $this->hasColumn('info', 'text', null, array(
             'type' => 'text',
             ));
        $this->hasColumn('drafted', 'boolean', null, array(
             'type' => 'boolean',
             'default' => true,
             ));
        $this->hasColumn('status', 'enum', null, array(
             'type' => 'enum',
             'values' => 
             array(
              0 => 'new',
              1 => 'assess',
              2 => 'complete',
             ),
             'default' => 'new',
             'length' => '',
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('Account', array(
             'local' => 'account_id',
             'foreign' => 'id',
             'onDelete' => 'CASCADE'));

        $this->hasOne('Plane', array(
             'local' => 'plane_id',
             'foreign' => 'id',
             'onDelete' => 'CASCADE'));

        $this->hasOne('sfGuardUser as PIC', array(
             'local' => 'pic_id',
             'foreign' => 'id',
             'onDelete' => 'CASCADE'));

        $this->hasOne('sfGuardUser as SIC', array(
             'local' => 'sic_id',
             'foreign' => 'id',
             'onDelete' => 'CASCADE'));

        $this->hasOne('Airport as AirportFrom', array(
             'local' => 'airport_from_id',
             'foreign' => 'id',
             'onDelete' => 'CASCADE'));

        $this->hasOne('Airport as AirportTo', array(
             'local' => 'airport_to_id',
             'foreign' => 'id',
             'onDelete' => 'CASCADE'));

        $timestampable0 = new Doctrine_Template_Timestampable(array(
             ));
        $this->actAs($timestampable0);
    }
}