<?php

/**
 * AirportTable
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 */
class AirportTable extends Doctrine_Table
{
    /**
     * Returns an instance of this class.
     *
     * @return object AirportTable
     */
    public static function getInstance()
    {
        return Doctrine_Core::getTable('Airport');
    }

    public static function getNameById($value)
    {
        $airport = Doctrine_Core::getTable('Airport')->find($value);
        return $airport;
    }

    public function getAirportsByName($name){

        return Doctrine_Query::create()
            ->from("Airport a")
            ->where("a.icao LIKE '{$name}%'")
            ->execute();

    }

    public function pushAirports($airports){
        $conn = $this->getConnection();
        $conn->beginTransaction();
        foreach($airports as $airport){
            $airport_entity = new Airport();
            $airport_entity->setName($airport['name']);
            $airport_entity->setCity($airport['city']);
            $airport_entity->setCountry($airport['country']);
            $airport_entity->setIATAFAA($airport['IATA_FAA']);
            $airport_entity->setICAO($airport['ICAO']);
            $airport_entity->setLatitude($airport['latitude']);
            $airport_entity->setLongitude($airport['longitude']);
            $airport_entity->setAltitude($airport['altitude']);
            $airport_entity->setTimezone($airport['timezone']);
            $airport_entity->setDST($airport['DST']);
            $airport_entity->save($conn);
        }
        return $conn->commit();
    }

    public static function getArrivalAirports($parameters){
        $account = $parameters['account'];
        return Doctrine_Query::create()
            ->from("Airport a")
            ->where('a.id IN (SELECT f.airport_to_id FROM flight f WHERE f.account_id = ?)', $account->getId())
            ->orderBy('a.icao')
            ->execute();
    }

    public function getOptionsAirportTo($account){
        $param['account'] = $account;
        $query = self::getArrivalAirports($param);
        $result = array();
        foreach($query as $row){
            $result[$row->getId()] = $row->getICAO();
        }
        return $result;
    }

}